{"version":3,"file":"static/js/628.5c462faf.chunk.js","mappings":"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","sources":["pages/MyDashboard/QuizDetailPage/index.jsx","services/axios.default.js","services/quiz.service.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport HTMLReactParser from 'html-react-parser';\r\nimport { useParams } from 'react-router-dom';\r\nimport * as QuizService from '~/services/quiz.service';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faClipboard, faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { questionTypeContent } from '~/constants';\r\nconst QuizDetailPage = () => {\r\n    const { id } = useParams();\r\n    const { data } = useQuery({\r\n        queryKey: ['data', id],\r\n        queryFn: () => QuizService.getQuizDetail(id),\r\n        enabled: !!id,\r\n    });\r\n\r\n    const [currentKey, setCurrentKey] = useState(1); // key của tabs\r\n    const [currentPartIndex, setCurrentPartIndex] = useState(0);\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n    const tabs = [\r\n        {\r\n            key: 1,\r\n            label: 'Thông tin chung',\r\n            icon: faClipboard,\r\n        },\r\n        {\r\n            key: 2,\r\n            label: 'Các câu hỏi',\r\n            icon: faQuestionCircle,\r\n        },\r\n    ];\r\n    const handleChangePartIndex = (index) => {\r\n        setCurrentPartIndex(index);\r\n        if (data?.quiz[index]) {\r\n            setCurrentPartIndex(index);\r\n            setCurrentQuestionIndex(0);\r\n        }\r\n    };\r\n    const handleChangeQuestionIndex = (index) => {\r\n        setCurrentQuestionIndex(index);\r\n        if (data) {\r\n            if (data.quiz[currentPartIndex].questions[index]) {\r\n                setCurrentQuestionIndex(index);\r\n            }\r\n        }\r\n    };\r\n    const tabItems = {\r\n        1: (\r\n            <section className=\"bg-white px-2 rounded\">\r\n                <table className=\"w-full\">\r\n                    <tbody>\r\n                        <tr className=\"h-10\">\r\n                            <td className=\"w-1/3 pl-2 font-semibold text-base\">Tên:</td>\r\n                            <td className=\"w-1/3 pl-2\">{data?.name}</td>\r\n                        </tr>\r\n                        <tr className=\"h-10 bg-gray-100\">\r\n                            <td className=\"w-1/3 pl-2 font-semibold text-base\">Môn học:</td>\r\n                            <td className=\"w-1/3 pl-2\">{data?.subject}</td>\r\n                        </tr>\r\n                        <tr className=\"h-10\">\r\n                            <td className=\"w-1/3 pl-2 font-semibold text-base\">Trường:</td>\r\n                            <td className=\"w-1/3 pl-2\">{data?.school}</td>\r\n                        </tr>\r\n                        <tr className=\"bg-gray-100\">\r\n                            <td className=\"w-1/3 pl-2 font-semibold text-base\">Ảnh:</td>\r\n                            <td className=\"w-1/3 pl-2 py-2\">\r\n                                <img src={data?.thumb} className=\"rounded-md\" width={180} alt={data?.name} />\r\n                            </td>\r\n                        </tr>\r\n                        <tr className=\"h-10\">\r\n                            <td className=\"w-1/3 pl-2 font-semibold text-base\">Mô tả:</td>\r\n                            <td className=\"w-1/3 pl-2\">{data?.description}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </section>\r\n        ),\r\n        2: (\r\n            <section className=\"w-full flex md:flex-row sm:flex-col gap-5\">\r\n                <div className=\"md:w-2/5 sm:w-full\">\r\n                    <div className=\"bg-white shadow-sm px-3 py-3 border rounded-md w-full\">\r\n                        <h5 className=\"pb-2\">Phần thi</h5>\r\n                        <div className=\"flex flex-wrap gap-2\">\r\n                            {data?.quiz &&\r\n                                data?.quiz.map((partDetail, index) => (\r\n                                    <button\r\n                                        key={index}\r\n                                        onClick={() => handleChangePartIndex(index)}\r\n                                        className={`${\r\n                                            partDetail?.partName === data?.quiz[currentPartIndex].partName\r\n                                                ? 'bg-primary border-primary text-white'\r\n                                                : 'border-gray-400 text-gray-700'\r\n                                        } px-3 py-2 rounded-md border-2 transition-all duration-300`}\r\n                                    >\r\n                                        {partDetail?.partName}\r\n                                    </button>\r\n                                ))}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"bg-white shadow-sm px-3 py-3 border rounded-md w-full mt-5 flex flex-wrap gap-5\">\r\n                        {data?.quiz &&\r\n                            data?.quiz[currentPartIndex]?.questions?.map((question, index) => (\r\n                                <button\r\n                                    key={index}\r\n                                    onClick={() => handleChangeQuestionIndex(index)}\r\n                                    className={`${\r\n                                        currentQuestionIndex === index\r\n                                            ? 'bg-primary text-white border-primary'\r\n                                            : 'bg-white  border-gray-400 text-gray-700 '\r\n                                    } hover:opacity-75 w-12 px-3 py-2 border-2 rounded-md duration-200 transition-all font-semibold`}\r\n                                >\r\n                                    {index + 1}\r\n                                </button>\r\n                            ))}\r\n                    </div>\r\n                </div>\r\n                <div className=\"md:flex-1 bg-white px-3 py-3 shadow-md sm:w-full\">\r\n                    {data?.quiz && data?.quiz[currentPartIndex]?.questions?.length > 0 && (\r\n                        <div>\r\n                            <p className=\"text-base\">\r\n                                <span className=\"font-medium\">Loại câu hỏi:</span>{' '}\r\n                                {\r\n                                    questionTypeContent[\r\n                                        data?.quiz[currentPartIndex].questions[currentQuestionIndex].questionType\r\n                                    ]\r\n                                }\r\n                            </p>\r\n                            {data?.quiz[currentPartIndex].questions[currentQuestionIndex].questionContent && (\r\n                                <div>\r\n                                    <h4 className=\"mt-3 text-xl font-bold flex\">Câu hỏi:</h4>\r\n                                    <div className=\"mt-1 text-xl\">\r\n                                        {HTMLReactParser(\r\n                                            data?.quiz[currentPartIndex].questions[currentQuestionIndex]\r\n                                                .questionContent,\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                            <div className=\"text-base\">\r\n                                {data?.quiz[currentPartIndex].questions[currentQuestionIndex].answers.map(\r\n                                    (answer, index) => (\r\n                                        <div key={index} className=\"mt-3 flex\">\r\n                                            <input\r\n                                                type={`${\r\n                                                    data?.quiz[currentPartIndex].questions[currentQuestionIndex]\r\n                                                        ?.questionType == 1\r\n                                                        ? 'radio'\r\n                                                        : 'checkbox'\r\n                                                }`}\r\n                                                checked={answer.isCorrect}\r\n                                                onChange={() => {}}\r\n                                            />\r\n                                            <label className=\"ml-3 text-gray-700 font-normal\">\r\n                                                {HTMLReactParser(answer.content)}\r\n                                            </label>\r\n                                        </div>\r\n                                    ),\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </section>\r\n        ),\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"w-full bg-white px-5 py-5 rounded-md\">\r\n                <div className=\"flex gap-9\">\r\n                    {tabs.map((item, index) => (\r\n                        <div\r\n                            key={item.key}\r\n                            className={`${\r\n                                currentKey === item.key\r\n                                    ? 'border-b-4 border-b-primary text-primary cursor-default'\r\n                                    : 'hover:opacity-50 cursor-pointer border-b-4 border-b-white'\r\n                            } flex flex-wrap items-center text-lg pb-2 px-1 transition-all duration-200 ease-linear`}\r\n                            onClick={() => setCurrentKey(item.key)}\r\n                        >\r\n                            <FontAwesomeIcon className=\"block\" icon={item.icon} />\r\n                            <p className=\"pl-2\">{item.label}</p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div className=\"mt-9 w-full\">{tabItems[currentKey]}</div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default QuizDetailPage;\r\n","import axios from 'axios';\r\n\r\nconst axiosApplicationJson = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL,\r\n    withCredentials: true,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\nexport default axiosApplicationJson;\r\n","import { message } from 'antd';\r\nimport axiosCredentials from './axios.credential';\r\nimport axiosApplicationJson from './axios.default';\r\n\r\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\nexport const getQuizzes = async () => {\r\n    try {\r\n        const res = await axiosCredentials.get(`/quiz/getQuizzes`);\r\n        if (res.status === 200 && res.data) {\r\n            await delay(2000);\r\n            return res.data.data ?? []; // data 1 là của axios còn data sau là của mình viết api trả về\r\n        }\r\n    } catch (err) {\r\n        if (err.response) {\r\n            throw new Error(err.response?.data);\r\n        }\r\n    }\r\n};\r\nexport const getQuizDetail = async (id) => {\r\n    try {\r\n        const res = await axiosCredentials.get(`/quiz/getQuizDetail?id=${id}`);\r\n        if (res.status === 200 && res.data) {\r\n            return res.data.data; // data 1 là của axios còn data sau là của mình viết api trả về\r\n        }\r\n        return {};\r\n    } catch (err) {\r\n        if (err.response) throw new Error(err.response.data);\r\n    }\r\n};\r\nexport const createQuiz = async (data) => {\r\n    try {\r\n        const { name, description, school, subject, topic, schoolYear, educationLevel, thumb } = data;\r\n\r\n        const res = await axiosCredentials.post(\r\n            `/quiz/create`,\r\n            JSON.stringify({\r\n                name,\r\n                description,\r\n                school,\r\n                subject,\r\n                topic,\r\n                schoolYear,\r\n                educationLevel,\r\n                thumb,\r\n            }),\r\n        );\r\n        // cấu hình để mslugdleware có thể xác thực được thông tin là đã đăng nhập bằng access token\r\n        if (res.status === 200 && res.data) {\r\n            return res.data.data;\r\n        }\r\n        return {};\r\n    } catch (err) {\r\n        if (err.response) {\r\n            throw new Error(err.response.data);\r\n        }\r\n    }\r\n};\r\nexport const createQuestion = async (data) => {\r\n    try {\r\n        const { id, partName, questionType, questionContent, answers } = data;\r\n        const res = await axiosCredentials.put(\r\n            `/quiz/createQuestion`,\r\n            JSON.stringify({\r\n                id,\r\n                partName,\r\n                questionType,\r\n                questionContent,\r\n                answers,\r\n            }),\r\n        );\r\n        if (res.status === 200 && res.data) {\r\n            return res.data.data;\r\n        }\r\n        return {};\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // Xử lý lỗi từ phản hồi HTTP\r\n            message.error(err.response.data);\r\n            throw new Error(err.response.data); // Ném lỗi để xử lý ở nơi gọi hàm login\r\n        }\r\n    }\r\n};\r\nexport const updateQuizGeneralInfo = async (data) => {\r\n    try {\r\n        const res = await axiosCredentials.put(`/quiz/updateQuizGeneralInfo`, JSON.stringify(data));\r\n        if (res.status === 200 && res.data) {\r\n            return res.data.data;\r\n        }\r\n        return {};\r\n    } catch (err) {\r\n        // console.log(err);\r\n        if (err.response) {\r\n            message.error(err.response.data);\r\n            throw new Error(err.response.data);\r\n        }\r\n    }\r\n};\r\nexport const updateQuizQuestion = async (data) => {\r\n    try {\r\n        const res = await axiosCredentials.put(`/quiz/updateQuizQuestion`, JSON.stringify(data));\r\n        if (res.status === 200 && res.data) {\r\n            return res.data.data;\r\n        }\r\n        return res;\r\n    } catch (err) {\r\n        if (err.response) {\r\n            console.log(err.response);\r\n            throw new Error(err.response.data);\r\n        }\r\n    }\r\n};\r\nexport const getQuizPreviewBySlug = async (slug) => {\r\n    try {\r\n        if (!slug) {\r\n            throw new Error('Lỗi');\r\n        }\r\n        const res = await axiosApplicationJson.get(`/quiz/getQuizPreview/${slug}`);\r\n        if (res.status === 200 && res.data) {\r\n            return res.data.data; // data 1 là của axios còn data sau là của mình viết api trả về\r\n        }\r\n        return {};\r\n    } catch (err) {\r\n        throw new Error(err.response.data);\r\n    }\r\n};\r\nexport const getQuizForExamBySlug = async (slug) => {\r\n    try {\r\n        if (!slug) {\r\n            throw new Error('Lỗi');\r\n        }\r\n        const res = await axiosCredentials.get(`/quiz/getQuizForExam/${slug}`);\r\n        if (res.status === 200 && res.data) {\r\n            return res.data.data; // data 1 là của axios còn data sau là của mình viết api trả về\r\n        }\r\n        return {};\r\n    } catch (err) {\r\n        throw new Error(err.response.data);\r\n    }\r\n};\r\nexport const deleteQuiz = async (data) => {\r\n    try {\r\n        const { id } = data;\r\n        if (!id) {\r\n            throw new Error('Có lỗi trong quá trình xóa');\r\n        }\r\n        const res = await axiosCredentials.delete(`/quiz/deleteQuiz/${id}`);\r\n        if (res.status === 200 && res.data) {\r\n            return res.data.data;\r\n        }\r\n        return {};\r\n    } catch (err) {\r\n        if (err.response) {\r\n            throw new Error(err.response.data);\r\n        }\r\n    }\r\n};\r\nexport const getDiscoveryQuizzes = async (data) => {\r\n    try {\r\n        const { name, page, limit, subject, topic, schoolYear, educationLevel } = data;\r\n        const params = new URLSearchParams();\r\n        Object.entries({ name, page, limit, subject, topic, schoolYear, educationLevel }).forEach(([key, value]) => {\r\n            if (value !== undefined) {\r\n                params.append(key, String(value));\r\n            }\r\n        });\r\n        const res = await axiosApplicationJson.get(`/quiz/getDiscoveryQuizzes?${params}`);\r\n        if (res.status === 200 && res.data) {\r\n            return res.data.data;\r\n        }\r\n        return [];\r\n    } catch (err) {\r\n        throw new Error(err.response.data);\r\n    }\r\n};\r\nexport const getQuizzesBySlugs = async (data) => {\r\n    const { slugs } = data;\r\n    if (!slugs || slugs.length === 0) throw new Error('Slugs are required');\r\n    const query = encodeURIComponent(JSON.stringify(slugs));\r\n    const res = await axiosCredentials.get(`/quiz/getQuizzesBySlugs?slugs=${query}`);\r\n    if (res.status === 200) {\r\n        return res.data.data;\r\n    }\r\n    return [];\r\n};\r\n"],"names":["QuizDetailPage","_data$quiz$currentPar","_data$quiz$currentPar2","_data$quiz$currentPar3","_data$quiz$currentPar4","id","useParams","data","useQuery","queryKey","queryFn","QuizService","enabled","currentKey","setCurrentKey","useState","currentPartIndex","setCurrentPartIndex","currentQuestionIndex","setCurrentQuestionIndex","tabs","key","label","icon","faClipboard","faQuestionCircle","tabItems","_jsx","className","children","_jsxs","name","subject","school","src","thumb","width","alt","description","quiz","map","partDetail","index","onClick","handleChangePartIndex","partName","questions","question","handleChangeQuestionIndex","length","questionTypeContent","questionType","questionContent","HTMLReactParser","answers","answer","_data$quiz$currentPar5","type","checked","isCorrect","onChange","content","_Fragment","item","FontAwesomeIcon","axios","create","baseURL","process","withCredentials","headers","getQuizzes","async","res","axiosCredentials","get","_res$data$data","status","ms","Promise","resolve","setTimeout","err","_err$response","response","Error","getQuizDetail","createQuiz","topic","schoolYear","educationLevel","post","JSON","stringify","createQuestion","put","message","error","updateQuizGeneralInfo","updateQuizQuestion","console","log","getQuizPreviewBySlug","slug","axiosApplicationJson","getQuizForExamBySlug","deleteQuiz","delete","getDiscoveryQuizzes","page","limit","params","URLSearchParams","Object","entries","forEach","_ref","value","undefined","append","String"],"sourceRoot":""}